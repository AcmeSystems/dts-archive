/*
 * Device Tree file for Acme Systems for RoadRunner SOM 
 * 7 inch TFT 
 * https://github.com/linux4sam/dt-overlay-at91/blob/master/sama5d2_ptc_ek/sama5d2_ptc_ek_pda5.dtso
 * https://www.linux4sam.org/bin/view/Linux4SAM/UsingAtmelDRMDriver
 *
 *  Copyright (C) 2015 Atmel,
 *                2015 Nicolas Ferre <nicolas.ferre@atmel.com>
 *                2020 Sergio Tanzilli <tanzilli@acmesystems.it>
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */
/dts-v1/;
#include "sama5d2.dtsi"
#include "sama5d2-pinfunc.h"
#include <dt-bindings/mfd/atmel-flexcom.h>
#include <dt-bindings/gpio/gpio.h>

/ {
	model = "Acme Systems SAMA5D2 Roadrunner";
	compatible = "atmel,sama5d2-roadrunner", "atmel,sama5d27","atmel,sama5d2", "atmel,sama5";

	bootargs = "mem=256M console=ttyS0,115200 root=/dev/mmcblk0p2 rootfstype=ext4 rw rootwait consoleblank=0";

	chosen {
		stdout-path = "serial0:115200n8";
	};

	clocks {
		slow_xtal {
			clock-frequency = <32768>;
		};

		main_xtal {
			clock-frequency = <12000000>;
		};
	};

	ahb {

		usb0: gadget@300000 {
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl_usba_vbus>;
			status = "okay";
		};

		usb1: ohci@400000 {
			num-ports = <3>;
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl_usb_default>;
			status = "okay";
		};

		usb2: ehci@500000 {
			status = "okay";
		};

		sdmmc1: sdio-host@b0000000 {
			bus-width = <4>;
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl_sdmmc1_default>;
			non-removable;
			status = "okay"; /* conflict with qspi0 */
		};

		apb {
			hlcdc: hlcdc@f0000000 {
				status = "okay";

				hlcdc-display-controller {

					pinctrl-names = "default";
					pinctrl-0 = <&pinctrl_lcd_base &pinctrl_lcd_rgb666>;

					port@0 {
						#address-cells = <1>;
						#size-cells = <0>;
						hlcdc_panel_output: endpoint@0 {
							reg = <0>;
							remote-endpoint = <&panel_input>;
						};
					};
				};
				
				hlcdc_pwm: hlcdc-pwm {
					pinctrl-names = "default";
					pinctrl-0 = <&pinctrl_lcd_pwm>;
				};
				
			};	

			backlight: backlight {
				compatible = "pwm-backlight";
				pwms = <&hlcdc_pwm 0 50000 0>;
				brightness-levels = <0 4 8 16 32 64 128 255>;
				default-brightness-level = <7>;
				power-supply = <&bl_reg>;
				status = "okay";
			};

			bl_reg: backlight_regulator {
				compatible = "regulator-fixed";
				regulator-name = "backlight-power-supply";
				regulator-min-microvolt = <5000000>;
				regulator-max-microvolt = <5000000>;
				status = "okay";
			};

			panel: panel {
				/* compatible = "pda,91-00156-a0", "simple-panel"; */
				compatible = "innolux,g070y2-l01", "simple-panel";
				backlight = <&backlight>;
				power-supply = <&panel_reg>;
				#address-cells = <1>;
				#size-cells = <0>;
				status = "okay";

				port@0 {
					reg = <0>;
					#address-cells = <1>;
					#size-cells = <0>;

					panel_input: endpoint@0 {
						reg = <0>;
						remote-endpoint = <&hlcdc_panel_output>;
					};
				};
			};

			panel_reg: panel_regulator {
				compatible = "regulator-fixed";
				regulator-name = "panel-power-supply";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				status = "okay";
			};


			macb0: ethernet@f8008000 {
				pinctrl-names = "default";
				pinctrl-0 = <&pinctrl_macb0_default &pinctrl_macb0_phy_irq>;
				phy-mode = "rmii";
				status = "okay";

				ethernet-phy@1 {
					reg = <0x1>;
					interrupt-parent = <&pioA>;
					interrupts = <73 IRQ_TYPE_LEVEL_LOW>;
					/*interrupts = <PIN_PC9 IRQ_TYPE_LEVEL_LOW>;*/
				};
			};

			tcb0: timer@f800c000 {
				timer0: timer@0 {
					compatible = "atmel,tcb-timer";
					reg = <0>;
				};

				timer1: timer@1 {
					compatible = "atmel,tcb-timer";
					reg = <1>;
				};
			};

			uart1: serial@f8020000 {
				pinctrl-names = "default";
				pinctrl-0 = <&pinctrl_uart1_default>;
				atmel,use-dma-rx;
				atmel,use-dma-tx;
				status = "okay";
			};

			shdwc@f8048010 {
				atmel,shdwc-debouncer = <976>;
				atmel,wakeup-rtc-timer;

				input@0 {
					reg = <0>;
					atmel,wakeup-type = "low";
				};
			};

			watchdog@f8048040 {
				status = "okay";
			};

			pinctrl@fc038000 {
			
				pinctrl_lcd_base: pinctrl_lcd_base {
					pinmux = <PIN_PC30__LCDVSYNC>,
						 <PIN_PC31__LCDHSYNC>,
						 <PIN_PD1__LCDDEN>,
						 <PIN_PD0__LCDPCK>;
					bias-disable;
					/* atmel,drive-strength = <ATMEL_PIO_DRVSTR_ME>; */
				};


				pinctrl_lcd_rgb666: pinctrl_lcd_rgb666 {
					pinmux = <PIN_PC10__LCDDAT2>,
						 <PIN_PC11__LCDDAT3>,
						 <PIN_PC12__LCDDAT4>,
						 <PIN_PC13__LCDDAT5>,
						 <PIN_PC14__LCDDAT6>,
						 <PIN_PC15__LCDDAT7>,
						 <PIN_PC16__LCDDAT10>,
						 <PIN_PC17__LCDDAT11>,
						 <PIN_PC18__LCDDAT12>,
						 <PIN_PC19__LCDDAT13>,
						 <PIN_PC20__LCDDAT14>,
						 <PIN_PC21__LCDDAT15>,
						 <PIN_PC22__LCDDAT18>,
						 <PIN_PC23__LCDDAT19>,
						 <PIN_PC24__LCDDAT20>,
						 <PIN_PC25__LCDDAT21>,
						 <PIN_PC26__LCDDAT22>,
						 <PIN_PC27__LCDDAT23>;
					bias-disable;
				};

				pinctrl_lcd_pwm: pinctrl_lcd_pwm {
					pinmux = <PIN_PC28__LCDPWM>;
					bias-disable;
				};

				pinctrl_isc_base: isc_base {
					pinmux = <PIN_PC4__ISC_PCK>,
						 <PIN_PC5__ISC_VSYNC>,
						 <PIN_PC6__ISC_HSYNC>,
						 <PIN_PC7__ISC_MCK>;
					bias-disable;
				};


				/*
				 * The ADTRG pin can work on any edge type.
				 * In here it's being pulled up, so need to
				 * connect it to ground to get an edge e.g.
				 * Trigger can be configured on falling, rise
				 * or any edge, and the pull-up can be changed
				 * to pull-down or left floating according to
				 * needs.
				 */
				pinctrl_adtrg_default: adtrg_default {
					pinmux = <PIN_PD31__ADTRG>;
					bias-pull-up;
				};

				pinctrl_charger_chglev: charger_chglev {
					pinmux = <PIN_PA12__GPIO>;
					bias-disable;
				};

				pinctrl_charger_irq: charger_irq {
					pinmux = <PIN_PB13__GPIO>;
					bias-disable;
				};

				pinctrl_charger_lbo: charger_lbo {
					pinmux = <PIN_PC8__GPIO>;
					bias-pull-up;
				};

				pinctrl_classd_default: classd_default {
					pinmux = <PIN_PB1__CLASSD_R0>,
						 <PIN_PB2__CLASSD_R1>,
						 <PIN_PB3__CLASSD_R2>,
						 <PIN_PB4__CLASSD_R3>;
					bias-pull-up;
				};

				pinctrl_flx0_default: flx0_default {
					pinmux = <PIN_PB28__FLEXCOM0_IO0>,
						 <PIN_PB29__FLEXCOM0_IO1>;
					bias-disable;
				};

				pinctrl_flx4_default: flx4_default {
					pinmux = <PIN_PD12__FLEXCOM4_IO0>,
						 <PIN_PD13__FLEXCOM4_IO1>;
					bias-disable;
				};

				pinctrl_i2c0_default: i2c0_default {
					pinmux = <PIN_PD21__TWD0>,
						 <PIN_PD22__TWCK0>;
					bias-disable;
				};

				pinctrl_i2c1_default: i2c1_default {
					pinmux = <PIN_PD4__TWD1>,
						 <PIN_PD5__TWCK1>;
					bias-disable;
				};

				pinctrl_key_gpio_default: key_gpio_default {
					pinmux = <PIN_PB9__GPIO>;
					bias-pull-up;
				};

				pinctrl_macb0_default: macb0_default {
					pinmux = <PIN_PB14__GTXCK>,
						 <PIN_PB15__GTXEN>,
						 <PIN_PB16__GRXDV>,
						 <PIN_PB17__GRXER>,
						 <PIN_PB18__GRX0>,
						 <PIN_PB19__GRX1>,
						 <PIN_PB20__GTX0>,
						 <PIN_PB21__GTX1>,
						 <PIN_PB22__GMDC>,
						 <PIN_PB23__GMDIO>;
					bias-disable;
				};

				pinctrl_macb0_phy_irq: macb0_phy_irq {
					pinmux = <PIN_PC9__GPIO>;
					bias-disable;
				};

				pinctrl_pdmic_default: pdmic_default {
					pinmux = <PIN_PB26__PDMIC_DAT>,
						<PIN_PB27__PDMIC_CLK>;
					bias-disable;
				};

				pinctrl_sdmmc0_default: sdmmc0_default {
					cmd_data {
						pinmux = <PIN_PA1__SDMMC0_CMD>,
							 <PIN_PA2__SDMMC0_DAT0>,
							 <PIN_PA3__SDMMC0_DAT1>,
							 <PIN_PA4__SDMMC0_DAT2>,
							 <PIN_PA5__SDMMC0_DAT3>,
							 <PIN_PA6__SDMMC0_DAT4>,
							 <PIN_PA7__SDMMC0_DAT5>,
							 <PIN_PA8__SDMMC0_DAT6>,
							 <PIN_PA9__SDMMC0_DAT7>;
						bias-disable;
					};

					ck_cd_rstn_vddsel {
						pinmux = <PIN_PA0__SDMMC0_CK>,
							 <PIN_PA10__SDMMC0_RSTN>,
							 <PIN_PA11__SDMMC0_VDDSEL>,
							 <PIN_PA13__SDMMC0_CD>;
						bias-disable;
					};
				};

				pinctrl_sdmmc1_default: sdmmc1_default {
					cmd_data {
						pinmux = <PIN_PA28__SDMMC1_CMD>,
							 <PIN_PA18__SDMMC1_DAT0>,
							 <PIN_PA19__SDMMC1_DAT1>,
							 <PIN_PA20__SDMMC1_DAT2>,
							 <PIN_PA21__SDMMC1_DAT3>;
						bias-pull-up;
					};

					conf-ck_cd {
						pinmux = <PIN_PA22__SDMMC1_CK>;
						bias-disable;
					};
				};

				/* Pin definition SPI 0 Peripheral A */

				pinctrl_spi0_default: spi0_default {
					pinmux = <PIN_PA14__SPI0_SPCK>,
							 <PIN_PA15__SPI0_MOSI>,
							 <PIN_PA16__SPI0_MISO>,
							 <PIN_PA17__SPI0_NPCS0>;
					bias-disable;
				};

				/* Pin definition SPI 1 Peripheral D */

				pinctrl_spi1_default: spi1_default {
					pinmux = <PIN_PC1__SPI1_SPCK>,
							<PIN_PC2__SPI1_MOSI>,
							<PIN_PC3__SPI1_MISO>,
							<PIN_PC4__SPI1_NPCS0>,
							<PIN_PC5__SPI1_NPCS1>;
					bias-disable;
				};

				pinctrl_uart1_default: uart1_default {
					pinmux = <PIN_PD2__URXD1>,
						 <PIN_PD3__UTXD1>;
					bias-disable;
				};

				pinctrl_uart3_default: uart3_default {
					pinmux = <PIN_PB11__URXD3>,
						 <PIN_PB12__UTXD3>;
					bias-disable;
				};

				pinctrl_usb_default: usb_default {
					pinmux = <PIN_PB10__GPIO>;
					bias-disable;
				};

				pinctrl_usba_vbus: usba_vbus {
					pinmux = <PIN_PA31__GPIO>;
					bias-disable;
				};

				pinctrl_pwm0_pwm2_default: pwm0_pwm2_default {
					pinmux = <PIN_PB5__PWMH2>,
						 <PIN_PB6__PWML2>;
					bias-pull-up;
				};
			};
		};
	};
};
